{"version":3,"sources":["./src/app/directives/choosen-filled-box.directive.ts","./src/app/GridGenerator.ts","./src/app/helpers.ts","./src/environments/environment.ts","./src/app/components/controls-panel/controls-panel.component.ts","./src/app/components/controls-panel/controls-panel.component.html","./src/app/components/primary-link/primary-link.component.ts","./src/app/components/primary-link/primary-link.component.html","./src/app/components/range-slider/range-slider.component.ts","./src/app/components/range-slider/range-slider.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/components/controls-panel-item-wrapper/controls-panel-item-wrapper.component.ts","./src/app/components/controls-panel-item-wrapper/controls-panel-item-wrapper.component.html","./src/app/app.module.ts","./src/app/sevices/grid/grid.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Directive, HostListener, Input } from '@angular/core';\nimport { GridService } from '../sevices/grid/grid.service';\n\n@Directive({\n  selector: '[appChoosenFilledBox]'\n})\nexport class ChoosenFilledBoxDirective {\n  @Input('appChoosenFilledBox') element;\n\n  constructor(private gridSerivce: GridService) { }\n\n  @HostListener('click') clicked(): void {\n    this.gridSerivce.findVerticallyAndHorizontallyAlignedBoxesToElementAndCount(this.element);\n  }\n\n  @HostListener('keyup.Space') Enter(): void {\n    this.gridSerivce.findVerticallyAndHorizontallyAlignedBoxesToElementAndCount(this.element);\n  }\n\n  @HostListener('mouseover') mouseover(): void {\n    this.gridSerivce.findVerticallyAndHorizontallyAlignedBoxesToElement(this.element);\n  }\n\n  @HostListener('mouseleave') mouseleave(): void {\n    this.gridSerivce.findVerticallyAndHorizontallyAlignedBoxesToElement(this.element);\n  }\n\n}\n","import { createTwoDimenensionalArray } from './helpers';\r\n\r\nexport class GridGenerator {\r\n  generate = (n: number) => {\r\n    return createTwoDimenensionalArray(n);\r\n  }\r\n}\r\n","export const createTwoDimenensionalArray = (size: number) => {\r\n  const result: any[][] = [];\r\n  for (let i = 0 ; i < size; i++) {\r\n    result[i] = [];\r\n    for (let j = 0; j < size; j++) {\r\n      result[i][j] = {value: Math.floor(Math.random() * 2), isCurrentlyNeighbourToHoveredElement: false };\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-controls-panel',\n  templateUrl: './controls-panel.component.html',\n  styleUrls: ['./controls-panel.component.scss']\n})\nexport class ControlsPanelComponent {\n  @Input() colorPickers;\n  @Output() emitRangeSliderValue = new EventEmitter<number>();\n  @Output() emitColorPickerValue = new EventEmitter<any>();\n\n  emitChangedColor(colorPicker, $event): void {\n    this.emitColorPickerValue.emit({\n      label: colorPicker.label,\n      defaultColor: $event.target.value\n    });\n  }\n\n  emitRegenerateGrid($event): void {\n    this.emitRangeSliderValue.emit($event);\n  }\n\n}\n","<div class=\"cag-controls-panel\">\n  <app-controls-panel-item-wrapper [isClickable]='false'>\n    <div item-wrapper-body>\n      <h1 class=\"cag-controls-panel__demo-controls--title\">\n        Customizable Accessible Grid\n      </h1>\n    </div>\n  </app-controls-panel-item-wrapper>\n  <app-controls-panel-item-wrapper [isClickable]='true'>\n    <app-range-slider item-wrapper-body (emitRangeSliderValue)=\"emitRegenerateGrid($event)\"></app-range-slider>\n  </app-controls-panel-item-wrapper>\n  <app-controls-panel-item-wrapper [isClickable]='true'>\n    <div item-wrapper-body>\n      <span class=\"cag-controls-panel__demo-controls--subtitle\">Grid Colors: </span>\n    \n      <div class=\"col-1-1\">\n        <div class=\"row\" *ngFor=\"let colorPicker of colorPickers\">\n          <input type=\"color\" id={{colorPicker.target}} name={{colorPicker.target}} value={{colorPicker.defaultColor}} (input)=\"emitChangedColor(colorPicker, $event)\" class=\"pointer\">\n          <label for={{colorPicker.target}}>{{colorPicker.label}}</label>\n        </div>\n      </div>\n    </div>\n  </app-controls-panel-item-wrapper>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-primary-link',\n  templateUrl: './primary-link.component.html',\n  styleUrls: ['./primary-link.component.scss']\n})\nexport class PrimaryLinkComponent {\n  @Input() href = '';\n  @Input() text = '';\n}\n","<a class=\"btn-large-blue-outline\" href={{href}}>{{text}}</a>","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-range-slider',\n  templateUrl: './range-slider.component.html',\n  styleUrls: ['./range-slider.component.scss']\n})\nexport class RangeSliderComponent {\n  currentSizeValue = 10;\n  @Output() emitRangeSliderValue = new EventEmitter<number>();\n\n  onChange(changeRangeEvent): void {\n    this.currentSizeValue = changeRangeEvent.target.value;\n    this.emitRangeSliderValue.emit(this.currentSizeValue);\n  }\n}\n","<div item-wrapper-body class=\"col-1-1\">\n  <span class=\"cag-controls-panel__demo-controls--subtitle\">Size: <span id=\"currentSizeValue\">{{currentSizeValue}}</span></span>\n  <input type=\"range\" min=\"4\" max=\"10\" value=\"10\" class=\"slider pointer\" id=\"sizeRange\" (input)=\"onChange($event)\">\n</div>\n","<mat-sidenav-container class=\"cag-demo-container\" (backdropClick)=\"close('backdrop')\">\n  <mat-sidenav #sidenav (keydown.escape)=\"close('escape')\" disableClose>\n    <button mat-button (click)=\"close('toggle button')\">\n      <mat-icon>close</mat-icon>\n    </button>\n    <div class=\"cag-demo-container__box\">\n      <app-controls-panel\n        class='cag-controls-panel'\n        [colorPickers]=\"colorPickers\"\n        (emitColorPickerValue)=\"changeColor($event)\"\n        (emitRangeSliderValue)=\"regenerateGrid($event)\">\n      </app-controls-panel>\n    </div>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <div class=\"col-1-1\">\n      <p><button mat-button (click)=\"sidenav.open()\">Customize Grid</button></p>\n      <div class=\"cag-grid shadow\">\n        <div class=\"row\" *ngFor=\"let row of currentGridState; let i = index\">\n          <div \n            *ngFor=\"let boxElement of row; let boxIndex = index\" \n            [appChoosenFilledBox]=\"[boxElement, i, boxIndex]\" \n            [tabindex]=\"boxElement.value === 1 ? 0 : -1\"\n            class=\"box_element\"\n            [ngClass]=\"{pointer: boxElement.value }\"\n            (keyup)=\"boxElement.value ? getSpaceInputEvent($event) : ''\"\n            (click)=\"boxElement.value ? getAndDisplayCountedVerticallyAndHortizontallyAlignedBoxesToElement($event) : ''\"\n            [style.backgroundColor]=\"applyBackgroundColor(boxElement)\"\n            >\n            {{boxElement.value}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { GridService } from './sevices/grid/grid.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  opened = true;\n  currentGridState: number[][] | undefined = this.gridService.currentGridValue;\n  previouslyClickedElement;\n  colorPickers = [\n    {label: 'Box Color', target: 'colorPickerForBoxes', defaultColor: '#EDDEDE' },\n    {label: 'Filled Box Color', target: 'colorPickerForFilledBoxes', defaultColor: '#E1E1DF' },\n    {label: 'Hover Box Color', target: 'colorPickerForHoveredAndNeigbouringBoxes', defaultColor: '#FFFFFF' }\n  ];\n  codeLink = 'https://github.com/frenchvargulf/cag-frontend';\n  codeLinkText = 'View Code';\n  @ViewChild('sidenav', { static: true }) sidenav: MatSidenav;\n\n  reason = '';\n\n  constructor(private gridService: GridService) {}\n\n  close(reason: string): void {\n    this.reason = reason;\n    this.sidenav.close();\n  }\n\n  regenerateGrid($event): void {\n    this.gridService.generateGrid($event);\n    this.currentGridState = this.gridService.currentGridValue;\n  }\n\n  changeColor($event): void {\n    const newColorPickers = [...this.colorPickers];\n    newColorPickers.forEach( colorPicker => {\n      if (colorPicker.label === $event.label) {\n        colorPicker.defaultColor = $event.defaultColor;\n        return colorPicker;\n      }\n      return colorPicker;\n    })\n    this.colorPickers = newColorPickers;\n  }\n\n  applyBackgroundColor(boxElement): any {\n    return boxElement.value === 1 ?\n      (boxElement.isCurrentlyNeighbourToHoveredElement ? this.colorPickers[2].defaultColor : this.colorPickers[1].defaultColor) :\n      this.colorPickers[0].defaultColor;\n  }\n\n  getSpaceInputEvent(keybordInputEvent): void {\n    if (keybordInputEvent.keyCode === 32) {\n      this.getAndDisplayCountedVerticallyAndHortizontallyAlignedBoxesToElement(keybordInputEvent);\n    }\n  }\n\n  getAndDisplayCountedVerticallyAndHortizontallyAlignedBoxesToElement(clickedBox): void {\n    const count = this.gridService.getVerticallyAndHorizontallyAlignedBoxesToElementCount();\n    clickedBox.target.innerText = count;\n\n    if (this.previouslyClickedElement) {\n      this.previouslyClickedElement.innerText = 1;\n    }\n    this.previouslyClickedElement = clickedBox.target;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-controls-panel-item-wrapper',\n  templateUrl: './controls-panel-item-wrapper.component.html',\n  styleUrls: ['./controls-panel-item-wrapper.component.scss']\n})\nexport class ControlsPanelItemWrapperComponent {\n  @Input() isClickable = false;\n}\n","<div class=\"cag-controls-panel__demo-controls\" [ngClass]=\"isClickable ? 'pointer' : ''\">\n  <ng-content select=\"[item-wrapper-body]\"></ng-content>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { ControlsPanelComponent } from './components/controls-panel/controls-panel.component';\nimport { ControlsPanelItemWrapperComponent } from './components/controls-panel-item-wrapper/controls-panel-item-wrapper.component';\nimport { RangeSliderComponent } from './components/range-slider/range-slider.component';\nimport { ChoosenFilledBoxDirective } from './directives/choosen-filled-box.directive';\nimport { PrimaryLinkComponent } from './components/primary-link/primary-link.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ControlsPanelComponent,\n    ControlsPanelItemWrapperComponent,\n    ChoosenFilledBoxDirective,\n    RangeSliderComponent,\n    PrimaryLinkComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    MatSidenavModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { GridGenerator } from '../../GridGenerator';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GridService {\n  defaultGridRange = 10;\n  gridGenerator: GridGenerator = new GridGenerator();\n  private currentGridSubject: BehaviorSubject<any>;\n  public currentGrid: Observable<any>;\n\n  currentElementState;\n  verticallyAndHorizontallyAlignedBoxesToElementState = {};\n  verticallyAndHorizontallyAlignedBoxesToElementCount = 0;\n\n  constructor() {\n    this.currentGridSubject = new BehaviorSubject<any>(this.gridGenerator.generate(10));\n    this.currentGrid = this.currentGridSubject.asObservable();\n  }\n\n  public get currentGridValue(): any {\n    return this.currentGridSubject.value;\n  }\n\n  generateGrid(n: number): any[][] {\n    this.currentGridSubject.next(this.gridGenerator.generate(n));\n    return this.gridGenerator.generate(n);\n  }\n\n  findVerticallyAndHorizontallyAlignedBoxesToElement(value): void {\n    this.currentElementState = value;\n\n    const possiblePositions = [\n      [value[1] - 1, value[2]],\n      [value[1] + 1, value[2]],\n      [value[1], value[2] - 1],\n      [value[1], value[2] + 1]\n    ];\n\n    const currentGridState = this.currentGridValue;\n\n    if (currentGridState[value[1]][value[2]]) {\n      currentGridState[value[1]][value[2]].isCurrentlyNeighbourToHoveredElement =\n      !currentGridState[value[1]][value[2]].isCurrentlyNeighbourToHoveredElement;\n    }\n\n    for (const possiblePosition of possiblePositions) {\n      if (currentGridState[possiblePosition[0]] && currentGridState[possiblePosition[0]][possiblePosition[1]]) {\n        currentGridState[possiblePosition[0]][possiblePosition[1]].isCurrentlyNeighbourToHoveredElement =\n        !currentGridState[possiblePosition[0]][possiblePosition[1]].isCurrentlyNeighbourToHoveredElement;\n      }\n    }\n  }\n\n  findVerticallyAndHorizontallyAlignedBoxesToElementAndCount(value): any {\n    const possiblePositions = [\n      [value[1] - 1, value[2]],\n      [value[1] + 1, value[2]],\n      [value[1], value[2] - 1],\n      [value[1], value[2] + 1]\n    ];\n\n    const currentGridState = this.currentGridValue;\n    const neighbours = [];\n    let count = 0;\n\n    for (const possiblePosition of possiblePositions) {\n      if (currentGridState[possiblePosition[0]] && currentGridState[possiblePosition[0]][possiblePosition[1]]) {\n        neighbours.push(currentGridState[possiblePosition[0]][possiblePosition[1]]);\n        count += currentGridState[possiblePosition[0]][possiblePosition[1]].value;\n      }\n    }\n    this.verticallyAndHorizontallyAlignedBoxesToElementCount = count;\n    return { neighbours, count };\n  }\n\n  getVerticallyAndHorizontallyAlignedBoxesToElementCount(): number {\n    return this.verticallyAndHorizontallyAlignedBoxesToElementCount;\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}